#!/usr/bin/env bash

# Install xCode cli tools
echo "Installing commandline tools..."
xcode-select --install

# macOS Settings
echo "Changing macOS default settings..."
defaults write com.apple.spaces spans-displays -bool false
defaults write com.apple.dock autohide -bool true
defaults write com.apple.dock mru-spaces -bool false # Mission Control Auto Arange Spaces
defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
defaults write NSGlobalDomain _HIHideMenuBar -bool true
defaults write com.apple.screencapture location -string "$HOME/Desktop"
defaults write com.apple.screencapture disable-shadow -bool true
defaults write com.apple.screencapture type -string "png"
defaults write com.apple.finder DisableAllAnimations -bool true
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
defaults write com.apple.Finder AppleShowAllFiles -bool true
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
defaults write com.apple.finder ShowStatusBar -bool false
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool YES
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false
defaults write -g AppleReduceDesktopTinting -bool yes
# Dissable system wide spell check
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
defaults write NSGlobalDomain NSAutomaticTextCompletionEnabled -bool false


# Script custom OS level keybidings
# https://developer.apple.com/library/archive/technotes/tn2450/_index.html#//apple_ref/doc/uid/DTS40017618-CH1-KEY_TABLE_USAGES
echo "Setting keybindings..."
# Set CapsLock -> Esc
hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x700000029}]}'

# Install Brew
which brew
if [[ $? != 0 ]] ; then
    echo "Installing Brew..."
    # Install Homebrew
    NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
    echo "Updating Brew..."
    brew update
fi
/opt/homebrew/bin/brew analytics off
/opt/homebrew/bin/brew install ansible
/opt/homebrew/bin/brew install stow

echo "Cloning setup project"
git clone https://github.com/jonathonadams/ansible.git ~/personal/ansible

csrutil status
# echo "(Yabai): Installing from --HEAD, make sure to create a self signed certifcate called 'yabi-cert' before running Ansible: 'https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(from-HEAD)'."
echo "(Yabai): Do not forget to disable SIP before running Ansible: 'https://github.com/koekeishiya/yabai/wiki/Disabling-System-Integrity-Protection'."
echo "Run Ansible to complete setup. Include '--ask-vault-pass -t never' to include SSH. 'ansible-playbook ~/persona/ansible/local.yml --ask-become-pass --ask-vault-pass -t never' ...\n"
echo "(GitHub): ensure to run 'gh auth login' after setup is complete"
